name: TDR metadata persistence lambda build release and deploy
on:
  push:
    branches:
      - main
    paths:
      - 'lambdas/tdr-draft-metadata-persistence/**'
      - 'lambdas/tdr-draft-metadata-common/**'
      - 'build.sbt'
      - 'project/**'
  workflow_dispatch:

# Adding concurrency group to ensure only one workflow runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Check if any other workflows are running and wait for them to complete
  wait-for-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for other workflows
        uses: softprops/turnstyle@807f6009e7cee5c2c9faa41ccef03a8bb24b06ab
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pre-deploy-persistence:
    needs: wait-for-workflows
    uses: nationalarchives/tdr-github-actions/.github/workflows/lambda_build.yml@main
    with:
      repo-name: tdr-draft-metadata-validator
      lambda-name: draft-metadata-persistence
      artifact-name: draft-metadata-persistence
      artifact-path: lambdas/tdr-draft-metadata-persistence/target/scala-2.13
      java-version: 21
      build-command: |
        sbt "tdrDraftMetadataPersistence/assembly"
    secrets:
      MANAGEMENT_ACCOUNT: ${{ secrets.MANAGEMENT_ACCOUNT }}
      WORKFLOW_PAT: ${{ secrets.WORKFLOW_PAT }}

  deploy-persistence:
    needs: pre-deploy-persistence
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - run: >
          gh workflow run deploy-lambda.yml --ref ${{ github.ref_name }} -f environment=intg
          -f to-deploy=${{ needs.pre-deploy-persistence.outputs.next-version }}
          -f lambda-name=draft-metadata-persistence
          -f deployment-package=draft-metadata-persistence.jar
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
